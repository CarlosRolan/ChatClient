package GUI.view;

import javax.swing.DefaultListModel;
import javax.swing.tree.TreePath;

import com.chat.Chat;
import com.data.MSG;

import GUI.GUI.IGUIListener;
import GUI.SwingUtils;
import GUI.view.components.MyMenuBar;
import GUI.view.components.MyTreeView;
import GUI.view.components.MyTreeView.ITreeViewListener;
import GUI.view.panels.ConversationPanel;
import GUI.view.panels.ConversationPanel.IChatLListener;
import GUI.view.panels.ListPanel;
import controller.manager.FileManager;

/**
 *
 * @author carlos
 */
public class MainMenu extends javax.swing.JFrame {

	private final String TAB_1 = "CHATS";
	private final String TAB_2 = "CONTACTOS";
	private final String TAB_3 = "X";

	/**
	 * Creates new form ChatClient
	 */
	public MainMenu() {
		initComponents();
		GUI.GUI.getInstance().setOnUpdate(iUpdateListener);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		scrollView = new javax.swing.JScrollPane();
		tree_users = new MyTreeView(iTreeViewListener);
		tabbedPane = new javax.swing.JTabbedPane();

		tab2 = new javax.swing.JPanel();
		tab3 = new javax.swing.JPanel();
		tab1 = new ListPanel();
		menuBar = new MyMenuBar();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		scrollView.setViewportView(tree_users);

		tabbedPane.addTab(TAB_1, tab1);

		javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
		tab2.setLayout(tab2Layout);
		tab2Layout.setHorizontalGroup(
				tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGap(0, 337, Short.MAX_VALUE));
		tab2Layout.setVerticalGroup(
				tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGap(0, 381, Short.MAX_VALUE));

		tabbedPane.addTab(TAB_2, tab2);

		javax.swing.GroupLayout tab3Layout = new javax.swing.GroupLayout(tab3);
		tab3.setLayout(tab3Layout);
		tab3Layout.setHorizontalGroup(
				tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGap(0, 337, Short.MAX_VALUE));
		tab3Layout.setVerticalGroup(
				tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGap(0, 381, Short.MAX_VALUE));

		tabbedPane.addTab(TAB_3, tab3);

		setJMenuBar(menuBar);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(scrollView, javax.swing.GroupLayout.PREFERRED_SIZE, 131,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(tabbedPane)
								.addContainerGap()));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(scrollView)
										.addComponent(tabbedPane))
								.addContainerGap()));

		scrollView.getAccessibleContext().setAccessibleName("panel_list");

		pack();
	}// </editor-fold>

	// Variables declaration - do not modify
	private MyMenuBar menuBar;
	private javax.swing.JScrollPane scrollView;
	private ListPanel tab1;
	private javax.swing.JPanel tab2;
	private javax.swing.JPanel tab3;
	private javax.swing.JTabbedPane tabbedPane;
	private MyTreeView tree_users;
	// End of variables declaration

	private final ITreeViewListener iTreeViewListener = new ITreeViewListener() {

		@Override
		public void onSingleRightClick(int selRow, TreePath selPath) {

			String userPathTag = selPath.getPathComponent(1).toString();
			String[] receptorInfo = selPath.getLastPathComponent().toString().split("_");

			if ("Users".equals(userPathTag)) {

				for (int i = 0; i < receptorInfo.length; i++) {
					System.out.println("INFO [" + i + "]" + receptorInfo[i]);
				}
			}

			String receptorId = receptorInfo[0];
			String receptorNick = receptorInfo[1];

			// showOnWindow
			ConversationPanel.showOnWindow(receptorId, receptorNick, iChatListener);
		}

	};
	private final IGUIListener iUpdateListener = new IGUIListener() {

		@Override
		public void onUpdate() {
			tree_users.update();
		}

		@Override
		public void onNewChat(Chat chat) {
			tree_users.updateChats();
			tree_users.refreshTreeView();
			tab1.addChatItem(chat);
		}

		@Override
		public void onMessageReceived(MSG msg) {
			tree_users.addAlertOnRef(msg.getEmisor());
			iChatListener.onMessageRecieved(msg);
		}
	};

	private final IChatLListener iChatListener = new IChatLListener() {

		@Override
		public void onMessageRead() {
			// TODO double check
		}

		@Override
		public void onMessageSent(String nick, String dateTime, String text, DefaultListModel<String> listModel) {

			FileManager.getInstance().saveHistory(nick, dateTime, text);
			SwingUtils.executeOnSwingThread(new Runnable() {

				@Override
				public void run() {
					String msgAdded = "[" + dateTime + "]" + nick + ":" + text;
					listModel.addElement(msgAdded);
				}
			});

		}

		@Override
		public void onMessageWritten() {

		}

	};

}
