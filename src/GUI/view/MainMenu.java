package GUI.view;

import java.awt.EventQueue;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.net.SocketException;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.tree.TreePath;

import com.chat.Chat;

import GUI.AppState;
import GUI.AppState.IUpdate;
import GUI.components.TreeViewUsers;
import GUI.components.TreeViewUsers.Events;
import GUI.view.panels.ChatListPanel;
import GUI.view.panels.ProfilePanel;
import api.ClientAPI;

/**
 *
 * @author carlos
 */
public class MainMenu extends javax.swing.JFrame {

	public void setTabView() {

	}

	/**
	 * Creates new form MainMenu
	 */
	public MainMenu() {
		initComponents();
		AppState.getInstance().setOnUpdate(updateListener);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		panel_side = new javax.swing.JPanel();
		label_singles = new javax.swing.JButton();
		label_chats = new javax.swing.JButton();
		label_edit_prpfile = new javax.swing.JButton();
		panel_list = new javax.swing.JScrollPane();
		tree_users = new TreeViewUsers(new Events() {

			@Override
			public void onRightClick(int selRow, TreePath selPath) {
				String[] candidateInfo = selPath.toString().split("_");
				String requesterID = AppState.getInstance().pClientCon.getConId();

				try {
					AppState.getInstance().pClientCon
							.writeMessage(ClientAPI.newRequest().askForSingle(null, null, null));
				} catch (NullPointerException | IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}

		});

		panel_tabs = new javax.swing.JTabbedPane();
		panel_tab_1 = new javax.swing.JPanel();
		panel_tab_chat_list = new ChatListPanel();
		jLabel1 = new javax.swing.JLabel();
		panel_tab_3 = new ProfilePanel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		label_singles.setText("DIRECT");

		label_chats.setText("CHATS");
		label_chats.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				label_chatsActionPerformed(evt);
				String title = JOptionPane.showInputDialog(this, "TITLE");
				String desc = JOptionPane.showInputDialog(this, "DESC");

				try {
					AppState.getInstance().pClientCon.createChatReq(title, desc);
				} catch (SocketException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		label_edit_prpfile.setText("PROFILE");
		label_edit_prpfile.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				label_edit_prpfileActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout panel_sideLayout = new javax.swing.GroupLayout(panel_side);
		panel_side.setLayout(panel_sideLayout);
		panel_sideLayout.setHorizontalGroup(
				panel_sideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(panel_sideLayout.createSequentialGroup()
								.addContainerGap()
								.addGroup(panel_sideLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(label_singles, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(label_chats, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(label_edit_prpfile, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		panel_sideLayout.setVerticalGroup(
				panel_sideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(panel_sideLayout.createSequentialGroup()
								.addContainerGap()
								.addComponent(label_singles)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(label_chats, javax.swing.GroupLayout.PREFERRED_SIZE, 23,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(label_edit_prpfile, javax.swing.GroupLayout.PREFERRED_SIZE, 23,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		panel_list.setViewportView(tree_users);

		panel_tabs.addTab("", panel_tab_1);

		jLabel1.setText("jLabel1");

		panel_tabs.addTab("Chats", panel_tab_chat_list);

		panel_tabs.addTab("Profile of", panel_tab_3);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(panel_side, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(panel_list, javax.swing.GroupLayout.PREFERRED_SIZE, 171,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(panel_tabs)
								.addContainerGap()));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(panel_tabs)
										.addComponent(panel_side, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(panel_list, javax.swing.GroupLayout.Alignment.TRAILING))
								.addContainerGap()));

		panel_side.getAccessibleContext().setAccessibleName("panel_side");
		panel_list.getAccessibleContext().setAccessibleName("panel_list");

		panel_tabs.setSelectedIndex(0);

		pack();
	}// </editor-fold>

	private void label_chatsActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void label_edit_prpfileActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	// Variables declaration - do not modify
	private javax.swing.JLabel jLabel1;
	private javax.swing.JButton label_chats;
	private javax.swing.JButton label_edit_prpfile;
	private javax.swing.JButton label_singles;
	private javax.swing.JScrollPane panel_list;
	private javax.swing.JPanel panel_side;
	private javax.swing.JPanel panel_tab_1;
	private ChatListPanel panel_tab_chat_list;
	private ProfilePanel panel_tab_3;
	private javax.swing.JTabbedPane panel_tabs;
	private TreeViewUsers tree_users;
	// End of variables declaration
	private final IUpdate updateListener = new IUpdate() {

		@Override
		public void onUpdate() {

			Runnable runnable = new Runnable() {

				@Override
				public void run() {
					tree_users.updateClients();
				}

			};

			if (EventQueue.isDispatchThread()) {
				runnable.run();
			} else {
				try {
					SwingUtilities.invokeAndWait(runnable);
				} catch (InvocationTargetException | InterruptedException e) {
					// Handle exception
				}
			}

		}

		@Override
		public void onNewChat(Chat newChat) {

			Runnable runnable = new Runnable() {

				@Override
				public void run() {
					panel_tab_chat_list.addChatItem(newChat);
					onUpdate();
				}

			};

			if (EventQueue.isDispatchThread()) {
				runnable.run();
			} else {
				try {
					SwingUtilities.invokeAndWait(runnable);
				} catch (InvocationTargetException | InterruptedException e) {
					// Handle exception
				}
			}

		}

	};
}
